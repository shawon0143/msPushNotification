'use strict';

function ping(json, connectionData, next) {
    console.log('ping incoming!');
    connectionData.sendResponse(json.requestId, 0, { answer: json.pong });
    next();
}

function pingWrong1(json, connectionData, next) {
    connectionData.sendResponse(json.requestId, 0, {  });
    next();
}

function pingWrong2(json, connectionData, next) {
    connectionData.sendResponse(json.requestId, 0, { answer: 3 });
    next();
}

function pingWrong3(json, connectionData, next) {
    connectionData.sendResponse(json.requestId, 0, { answer: 'hallo', test: 'test' });
    next();
}

function noAnswer(json, connectionData, next) {
}

function tooMuchFields(json, connectionData, next) {
    connectionData.sendResponse(json.requestId, 0, { field1: 'field1', field2: 'field2', field3: 'field3' });
    next();
}

function testCommand(json, connectionData, next) {
    let testBuffer = new Buffer(0),
        testBuffer2 = new Buffer(0);

    testBuffer += 'hallo';
    testBuffer2 += 'hu!';
    connectionData.sendResponse(json.requestId, 0, { answer: 'huhu!' }, [testBuffer, testBuffer2]);

    if (json.appendedBinaries) {
        //console.log('appendBinaries: ' + json.appendedBinaries);
        for (let i = 0, len = json.binaries.length; i < len; i++) {
            //            console.log(json.binaries[i]);
        }
    }

    connectionData.sendRequest('clientCommand', { testparam: 'hallo' }, (json, resultConnectionData) => {
        //console.log('response on clientcommand: ' + util.inspect(json));
    });
    next();
}

function disconnect(connectionData) {
    //console.log('client disconnect!');
}

module.exports.ping = ping;
module.exports.pingWrong1 = pingWrong1;
module.exports.pingWrong2 = pingWrong2;
module.exports.pingWrong3 = pingWrong3;
module.exports.tooMuchFields = tooMuchFields;
module.exports.noAnswer = noAnswer;

module.exports.testCommand = testCommand;
module.exports.disconnect = disconnect;
