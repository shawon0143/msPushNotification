'use strict';

const log = require('log').create({ logLevel: 8 }),
    jsonConnect = require('../index'),
    JsonSocketServer = jsonConnect.server,
    JsonSocketClients = jsonConnect.clients,
    util = require('util'),
    fs = require('fs'),
    serverCommands = require('./servercommands'),
    yamlParser = require('yamljs');

let jsonSocketServer = null;

jsonSocketServer = new JsonSocketServer({ logLevel: 3 }, (json, connectionData) => {
    connectionData.sendResponse(connectionData, json.requestId, 2, { answer: 'unknown command!' });
});
jsonSocketServer.createServer('0.0.0.0', 8001);

var receivedTestCommands = 0;

jsonSocketServer.registrateCommand('testCommand', (json, connectionData) => {
    if (receivedTestCommands == 0)
    {
        console.log('first received');
    }

    receivedTestCommands++;
    if (receivedTestCommands % 10000 == 0) {
        console.log('received: ' + receivedTestCommands + ' ' + new Date());
    }

    connectionData.sendResponse(json.requestId, 0, null);
});
/*
var jsonSocketClients = new JsonSocketClients({ logLevel: 3, useTls: false }, (json, connection) => {
});

function randomInt (low, high) {
    return Math.floor(Math.random() * (high - low) + low);
}

for (let i=0; i<10; i++) {
    jsonSocketClients.connect('0.0.0.0', 8001, function(connected, connection)  {
        for (let j=1; j<10001; j++) {

            setTimeout(function () {
                if (j % 1000 == 0) {
                    console.log('send ' + j);
                }
                connection.sendRequest("testCommand", { param1: "Hallo!" }, (params, connection, errorCode) => {
                });
            }, randomInt(1, 1000));
        }
    });
}

*/
